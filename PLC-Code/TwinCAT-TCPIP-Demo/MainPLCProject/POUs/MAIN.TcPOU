<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{95304827-347d-4a06-bca0-c327a1e079aa}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR CONSTANT
	LOCALHOST_IP : T_IPv4Addr := '127.0.0.1';
	LOCALHOST_PORT : UDINT := 8080;

	REMOTE_IP : T_IPv4Addr := '192.168.3.1';
	REMOTE_PORT : UDINT := 8080;
	
	ROBOT_IP : T_IPv4Addr := '192.168.3.11';
	ROBOT_PORT : UDINT := 3920;
	
	command : Command := ();
	message : Message := ();

END_VAR
VAR
	buttonConnectPressed : BOOL;
	buttonDisconnectPressed : BOOL;	
	buttonSendPressed : BOOL;
	
	connectTrigger : R_TRIG;
	disconnectTrigger : R_TRIG;
	sendTrigger : R_TRIG;
	
	client : TCPClient(ROBOT_IP, ROBOT_PORT, isEnabled := FALSE);

	
	closeAllConnections : FB_SocketCloseALL();
	closeAll : BOOL := TRUE;	//Close all on initial startup
	
	messageToServer : T_MaxString := 'CRISTART 1 CMD Connect CRIEND';
	messageFromServer : STRING(1024) := '';
	finalSendMsg : STRING(100);
	
	heartbeatTimer : TON;
	heartbeatInterval : TIME := T#1S;
	
	sendCounter : INT := 1;
	finalAliveMessage : STRING(100) := '';
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//On PLC reset/program download, close all connections
IF (closeAll) THEN	
	closeAll := FALSE;
	closeAllConnections(sSrvNetId := '', bExecute := TRUE, tTimeout := T#10S);
ELSE
	closeAllConnections(bExecute := FALSE);
END_IF

IF (closeAllConnections.bBusy) THEN
	RETURN;	//Do not continue the program until all connections are closed
END_IF

// === ===

// === UI Handling ===
connectTrigger(CLK := buttonConnectPressed);
disconnectTrigger(CLK := buttonDisconnectPressed);
sendTrigger(CLK := buttonSendPressed);

IF (connectTrigger.Q) THEN
	client.BindReceiveMessage(variableToBind := messageFromServer);
	client.Enable();
END_IF

IF (disconnectTrigger.Q) THEN
	client.Disable();
END_IF

IF (sendTrigger.Q) THEN
	//LogToWarning(msgFmtStr := 'Sending: %s', messageArg := messageToServer);
	finalSendMsg := CONCAT('CRISTART ', CONCAT(INT_TO_STRING(sendCounter), ' CMD Enable CRIEND'));
	sendCounter := (sendCounter MOD 9999) + 1;
	
	client.Send(messageToSend := finalSendMsg);

//	client.Send(messageToSend := messageToServer);
END_IF
// === ===

// === Heartbeat ===

heartbeatTimer(IN := TRUE, PT := heartbeatInterval);

IF (heartbeatTimer.Q AND client.IsClientEnabled) THEN
	heartbeatTimer(IN := FALSE);
	
	finalAliveMessage := CONCAT('CRISTART ', CONCAT(INT_TO_STRING(sendCounter), message.AliveDemo));
	client.Send(messageToSend := finalAliveMessage);
	sendCounter := (sendCounter MOD 9999) + 1;
END_IF
// === ===

client();

]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="321" Count="29" />
      <LineId Id="389" Count="0" />
      <LineId Id="388" Count="0" />
      <LineId Id="391" Count="2" />
      <LineId Id="351" Count="1" />
      <LineId Id="381" Count="0" />
      <LineId Id="354" Count="0" />
      <LineId Id="372" Count="0" />
      <LineId Id="380" Count="0" />
      <LineId Id="373" Count="3" />
      <LineId Id="383" Count="1" />
      <LineId Id="377" Count="0" />
      <LineId Id="385" Count="0" />
      <LineId Id="378" Count="0" />
      <LineId Id="355" Count="2" />
      <LineId Id="369" Count="0" />
      <LineId Id="95" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>